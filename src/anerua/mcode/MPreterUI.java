/*
 * Copyright Â© 2018 Martins Anerua
 */

package anerua.mcode;

import java.awt.Color;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.UIManager;

/**
 *
 * @author MARTINS
 */
public class MPreterUI extends javax.swing.JFrame {

    MPreter m = new MPreter();
    MPreterUI fr;

    String hist;

    int line_no;

    public void writeTo(String line) {
        try {

            
            FileWriter fw = new FileWriter(hist, true);

            try (BufferedWriter bf = new BufferedWriter(fw)) {
                bf.newLine();
                bf.append(line);
            }
        } catch (IOException e) {
            // TODO Auto-generated catch block

        }
    }
    
    public Color readFrom(String file){
        Color cl = null;
        try {

            FileReader fi = new FileReader(file);

            try (BufferedReader br = new BufferedReader(fi)) {
                 cl = Color.decode(br.readLine());
            }
        } catch (IOException e) {
            // TODO Auto-generated catch block

        }
        return cl;
    }
    
    /**
     * Creates new form MPreterUI
     */
    public MPreterUI() {
        this.hist = MPreterUI.class.getResource("/anerua/mcode/hist.txt").getFile();
        initComponents();

        view.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent arg0) {
                int caret = view.getCaretPosition();
                int last = view.getText().lastIndexOf("mCode>") + 6;

                /* Ensure past output can not be deleted */
                if (caret <= last) {
                    if (arg0.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
                        view.append(" ");
                        view.setCaretPosition(last + 1);
                    }
                    view.setCaretPosition(view.getText().length());
                }

                /* Command execution */
                if (arg0.getKeyCode() == KeyEvent.VK_ENTER) {
                    String argue = "";	//argument

                    String[] content = view.getText().split("\n");
                    String last_line = content[content.length - 1];
                    String order = last_line.substring(6).trim().toLowerCase();	//command

                    if (order.contains(" -")) {
                        String[] full_order = order.split(" -", 2);
                        order = full_order[0];
                        argue = full_order[1];
                    }

                    writeTo(order);

                    m.mInterpreter(order, argue, fr, view);	// Code execution

                    char back = arg0.getKeyChar();
                    Character.toString(back);
                    view.append("\nmCode>");
                    int size = view.getText().toCharArray().length;
                    view.replaceRange("", size, size + 1);

                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        view = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MCode Interpreter");
        setExtendedState(Frame.MAXIMIZED_BOTH);
        setIconImage(Toolkit.getDefaultToolkit().getImage(MPreterUI.class.getResource("/anerua/mcode/mlogo.png")));
        setUndecorated(true);
        setResizable(false);

        view.setBackground(readFrom(MPreterUI.class.getResource("/anerua/mcode/bg.txt").getFile()));
        view.setColumns(20);
        view.setFont(new java.awt.Font("OCR A Extended", 0, 13)); // NOI18N
        view.setForeground(readFrom(MPreterUI.class.getResource("/anerua/mcode/text.txt").getFile()));
        view.setRows(5);
        view.setText("MCode Interpreter v1.1.2\r\nCopyright \u00A9 2018 Martins Anerua. All rights reserved.\r\n\r\nType 'help' to see a list of all commands.\r\n\r\nmCode>");
        view.setCaretColor(readFrom(MPreterUI.class.getResource("/anerua/mcode/text.txt").getFile()));
        jScrollPane1.setViewportView(view);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MPreterUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            MPreterUI f = new MPreterUI();
            f.setVisible(true);
            f.fr = f;
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea view;
    // End of variables declaration//GEN-END:variables
}
